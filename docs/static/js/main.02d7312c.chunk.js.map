{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","type","value","onChange","target","placeholder","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OAEI,aADA,CACA,QAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACFC,QAAQC,IAAI,gBACRN,EAAWO,OAAOC,OAAS,IAC3BV,GAAc,SAAAW,GAAI,OAAKT,GAAL,mBAAoBS,OACtCR,EAAc,MAKlB,SACI,uBAAOS,KAAK,OAAOC,MAAOX,EAAYY,SAhBpB,SAACT,GACvBE,QAAQC,IAAIH,EAAEU,OAAOF,OACrBV,EAAcE,EAAEU,OAAOF,QAcgDG,YAAY,iBAM3FjB,EAAYkB,UAAY,CACpBjB,c,OAAekB,EAAUC,KAAKC,Y,mCC5BrBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,gDACkCC,UAAUH,GAD5C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAWZM,GAXY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAMN,IACrB,4BAAIA,QCHHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACZrB,mBAAS,CAC/B4B,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAatC,OAPAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GACfH,EAAS,CACLf,KAAMkB,EAAML,SAAS,SAGlC,CAACpB,IACGqB,EDT0BK,CAAa1B,GAAjCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACX,qBAAKA,UAAU,YAAf,SAEOH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEXjCgB,EAAe,WAAM,MAGMhD,mBAAS,CAAC,qBAHhB,mBAGvBiD,EAHuB,KAGXlD,EAHW,KAU9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQkD,EAAWnB,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MChBtC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.02d7312c.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n    const handleInputChange = (e) => {\n        console.log(e.target.value);\n        setInputValue(e.target.value);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log('Submit hecho');\n        if (inputValue.trim().length > 2) {\n            setCategories(cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n    };\n    return (\n        // <>\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" value={inputValue} onChange={handleInputChange} placeholder=\"Search...\"/>\n        </form>\n        // </>\n    )\n}\n\nAddCategory.prototype = {\n    setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async (category) => {\n    const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=Ccx08K44oZE5u1GL4d4EOuhejM2dStiO&limit=10`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    }); \n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({ title, url }) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={ title }/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n            {<div className=\"card-grid\">\n                {\n                    images.map(img =>\n                        <GifGridItem key={img.id} {...img} />\n                    )\n                }\n            </div>}\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from '../helpers/getGifs'\nexport const useFetchGifs = (category) => {\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category).then(imgs => {\n                setstate({\n                    data: imgs, loading: false\n                });\n        });\n    }, [category]);\n    return state;//{data:[], loading: true}\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    // const categories = ['One punch man', 'Dragon Ball', 'Metal gear solid'];\n    const [categories, setCategories] = useState(['Metal gear solid']);\n\n    // const handleAdd = () => {\n    //     //setCategories([...categories,'Spiderman']);\n    //     setCategories(cats => [...cats, 'Spiderman']);\n    // };\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n            <ol>\n                {\n                    categories.map((category) => (\n                        <GifGrid key={category} category={category} />\n                    ))\n                }\n            </ol>\n        </>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}